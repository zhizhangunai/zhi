const prettierRc = require('../prettier/prettierrc.js');

const commonExtensions = [
    'airbnb',
    'plugin:cypress/recommended',
    'plugin:react/recommended',
    'plugin:prettier/recommended',
    'plugin:jsx-a11y/recommended',
    'prettier',
    'prettier/react',
];

const rules = {
    'arrow-body-style': 'off',
    curly: 'error',
    'flowtype/sort-keys': 'error',
    'flowtype/space-after-type-colon': ['error', 'always', { allowLineBreak: true }], // fixes conflict w/prettier
    'formatjs/enforce-description': 'error', // replaces enforceDescription for babel react-intl plugin
    'import/extensions': 'off',
    'lodash/import-scope': ['error', 'method'],
    'no-param-reassign': 'off',
    'prefer-destructuring': [
        'error',
        {
            VariableDeclarator: {
                array: false,
                object: true,
            },
            AssignmentExpression: {
                array: false,
                object: false,
            },
        },
    ],
    'prettier/prettier': ['error', prettierRc],
    'react-hooks/exhaustive-deps': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react/display-name': 'off',
    'react/jsx-filename-extension': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-sort-props': 'error',
    'react/no-danger': 'error',
    'react/no-deprecated': 'off', // fix before React 17
    'react/no-did-update-set-state': 'off',
    'react/require-default-props': 'off',
    'react/state-in-constructor': 'off',
    'react/static-property-placement': 'off', // does not work correctly with flow and class components

    // @TODO(jtan): Remove this temporary hack to get static-variables working with sort-comp when airbnb releases new version
    // Copied from https://github.com/airbnb/javascript/blob/3fb312f18198364bacc07e61ca58ff89f9f0afa2/packages/eslint-config-airbnb/rules/react.js#L241-L288
    'react/sort-comp': [
        'error',
        {
            order: [
                'static-variables',
                'static-methods',
                'instance-variables',
                'lifecycle',
                '/^on.+$/',
                'getters',
                'setters',
                '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
                'instance-methods',
                'everything-else',
                'rendering',
            ],
            groups: {
                lifecycle: [
                    'displayName',
                    'propTypes',
                    'contextTypes',
                    'childContextTypes',
                    'mixins',
                    'statics',
                    'defaultProps',
                    'constructor',
                    'getDefaultProps',
                    'getInitialState',
                    'state',
                    'getChildContext',
                    'getDerivedStateFromProps',
                    'componentWillMount',
                    'UNSAFE_componentWillMount',
                    'componentDidMount',
                    'componentWillReceiveProps',
                    'UNSAFE_componentWillReceiveProps',
                    'shouldComponentUpdate',
                    'componentWillUpdate',
                    'UNSAFE_componentWillUpdate',
                    'getSnapshotBeforeUpdate',
                    'componentDidUpdate',
                    'componentDidCatch',
                    'componentWillUnmount',
                ],
                rendering: ['/^render.+$/', 'render'],
            },
        },
    ],
};

module.exports = {
    parser: 'babel-eslint',
    parserOptions: {
        ecmaVersion: 6,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: ['cypress', 'flowtype', 'lodash', 'react', 'prettier', 'react-hooks', 'formatjs'],
    settings: {
        react: {
            version: '16.8.0', // React version, defaults to the latest stable
            flowVersion: '0.95', // Flow version
        },
    },
    extends: [...commonExtensions, 'plugin:flowtype/recommended', 'prettier/flowtype'], // flow extensions
    env: {
        'cypress/globals': true,
        node: true,
        browser: true,
        jest: true,
    },
    globals: {
        Box: false,
    },
    rules,
    overrides: [
        {
            files: ['*.test.js', '*.test.tsx'],
            rules: {
                'global-require': 'off', // require needs to be done in beforeEach to correctly reset modules
            },
            globals: {
                shallow: true,
                mount: true,
            },
        },
        {
            files: ['*.ts', '*.tsx'],
            parser: '@typescript-eslint/parser',
            extends: [...commonExtensions, 'plugin:@typescript-eslint/recommended', 'prettier/@typescript-eslint'], // TS extensions
            rules,
        },
    ],
};
