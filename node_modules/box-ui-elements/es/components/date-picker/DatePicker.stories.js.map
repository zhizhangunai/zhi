{"version":3,"sources":["../../../src/components/date-picker/DatePicker.stories.tsx"],"names":["React","IntlProvider","State","Store","TooltipPosition","DatePicker","notes","bdlGray10","basic","MIN_TIME","Date","TODAY","yearRange","getFullYear","componentStore","date","fromDate","toDate","state","day","month","year","set","basicWithKeyboardInput","withDescription","manuallyEditable","manuallyEditableAndAccessible","withLimitedDateRange","maxDate","sixDays","minDate","valueOf","alwaysVisibleWithCustomInputField","customInput","display","justifyContent","margin","width","position","left","top","zIndex","background","border","borderRadius","padding","height","outline","textAlign","toDateString","disabledWithErrorMessage","customErrorTooltipPosition","MIDDLE_RIGHT","withRange","MAX_TIME","withRangeAndKeyboardInput","title","component","parameters"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { State, Store } from '@sambego/storybook-state';\n\nimport { TooltipPosition } from '../tooltip';\nimport DatePicker from './DatePicker';\nimport notes from './DatePicker.stories.md';\n\nimport { bdlGray10 } from '../../styles/variables';\n\nexport const basic = () => {\n    const MIN_TIME = new Date(0);\n    const TODAY = new Date('July 18, 2018');\n    const yearRange = [MIN_TIME.getFullYear(), TODAY.getFullYear()];\n    const componentStore = new Store({\n        date: new Date('July 9, 2018'),\n        fromDate: null,\n        toDate: null,\n    });\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en-US\">\n                    <DatePicker\n                        className=\"date-picker-example\"\n                        displayFormat={{\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric',\n                        }}\n                        label=\"Date\"\n                        name=\"datepicker\"\n                        onChange={(date: Date) => {\n                            componentStore.set({ date });\n                        }}\n                        placeholder=\"Date\"\n                        value={state.date}\n                        yearRange={yearRange}\n                    />\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport const basicWithKeyboardInput = () => {\n    const MIN_TIME = new Date(0);\n    const TODAY = new Date('July 18, 2018');\n    const yearRange = [MIN_TIME.getFullYear(), TODAY.getFullYear()];\n    const componentStore = new Store({\n        date: new Date('July 9, 2018'),\n        fromDate: null,\n        toDate: null,\n    });\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en-US\">\n                    <DatePicker\n                        className=\"date-picker-example\"\n                        displayFormat={{\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric',\n                        }}\n                        isKeyboardInputAllowed\n                        label=\"Date\"\n                        name=\"datepicker\"\n                        onChange={(date: Date) => {\n                            componentStore.set({ date });\n                        }}\n                        placeholder=\"Date\"\n                        value={state.date}\n                        yearRange={yearRange}\n                    />\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport const withDescription = () => (\n    <IntlProvider locale=\"en-US\">\n        <DatePicker placeholder=\"Date\" description=\"Date of your birth\" label=\"Date Picker\" />\n    </IntlProvider>\n);\n\nexport const manuallyEditable = () => (\n    <IntlProvider locale=\"en-US\">\n        <DatePicker isTextInputAllowed placeholder=\"Date\" label=\"Date Picker\" value={new Date('September 27, 2019')} />\n    </IntlProvider>\n);\n\nexport const manuallyEditableAndAccessible = () => (\n    <IntlProvider locale=\"en-US\">\n        <DatePicker isAccessible placeholder=\"Date\" label=\"Date Picker\" value={new Date('August 10, 2021')} />\n    </IntlProvider>\n);\n\nexport const withLimitedDateRange = () => {\n    const maxDate = new Date('February 25, 2021');\n    const sixDays = 1000 * 60 * 60 * 24 * 6;\n    const minDate = new Date(maxDate.valueOf() - sixDays);\n    const componentStore = new Store({\n        date: maxDate,\n        fromDate: null,\n        toDate: null,\n    });\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en-US\">\n                    <DatePicker\n                        isTextInputAllowed\n                        placeholder=\"Date\"\n                        label=\"Date Picker\"\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        value={state.date}\n                    />\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport const alwaysVisibleWithCustomInputField = () => {\n    const componentStore = new Store({\n        date: new Date('February 26, 2021'),\n        fromDate: null,\n        toDate: null,\n    });\n\n    return (\n        <State store={componentStore}>\n            {state => {\n                const customInput = (\n                    <input\n                        style={{\n                            display: 'none',\n                        }}\n                    />\n                );\n\n                return (\n                    <IntlProvider locale=\"en-US\">\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <DatePicker\n                                className=\"date-picker-example\"\n                                customInput={customInput}\n                                displayFormat={{\n                                    day: 'numeric',\n                                    month: 'short',\n                                    year: 'numeric',\n                                }}\n                                hideLabel\n                                isAlwaysVisible\n                                isClearable={false}\n                                label=\"Date\"\n                                name=\"datepicker\"\n                                onChange={(date: Date) => {\n                                    componentStore.set({ date });\n                                }}\n                                placeholder=\"Date\"\n                                value={state.date}\n                            />\n                            <div\n                                style={{\n                                    margin: '20px 30px',\n                                    width: '400px',\n                                }}\n                            >\n                                <p>\n                                    In this example, the DatePicker is bound to a custom hidden input field. The right\n                                    panel retains the same state as the DatePicker, but is not contained within the\n                                    DatePicker component.\n                                </p>\n                                <div\n                                    style={{\n                                        position: 'relative',\n                                    }}\n                                >\n                                    <label\n                                        htmlFor=\"date-picker-custom-input\"\n                                        style={{\n                                            position: 'absolute',\n                                            left: '10px',\n                                            top: '6px',\n                                            zIndex: 100,\n                                        }}\n                                    >\n                                        Start Date\n                                    </label>\n                                    <input\n                                        disabled\n                                        name=\"date-picker-custom-input\"\n                                        style={{\n                                            background: bdlGray10,\n                                            border: 0,\n                                            borderRadius: '4px',\n                                            padding: '.5em .8em',\n                                            width: '19em',\n                                            height: '2.5em',\n                                            top: 0,\n                                            outline: 'none',\n                                            textAlign: 'right',\n                                        }}\n                                        value={state.date.toDateString()}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </IntlProvider>\n                );\n            }}\n        </State>\n    );\n};\n\nexport const disabledWithErrorMessage = () => (\n    <IntlProvider locale=\"en-US\">\n        <DatePicker\n            isDisabled\n            error=\"Error Message\"\n            placeholder=\"Date\"\n            name=\"datepicker\"\n            label=\"Disabled Date Picker\"\n        />\n    </IntlProvider>\n);\n\nexport const customErrorTooltipPosition = () => (\n    <IntlProvider locale=\"en-US\">\n        <DatePicker\n            error=\"Error Message\"\n            errorTooltipPosition={TooltipPosition.MIDDLE_RIGHT}\n            placeholder=\"Date\"\n            name=\"datepicker\"\n            label=\"Disabled Date Picker\"\n        />\n    </IntlProvider>\n);\n\nexport const withRange = () => {\n    const MAX_TIME = new Date('3000-01-01T00:00:00.000Z');\n    const MIN_TIME = new Date(0);\n    const TODAY = new Date();\n    const componentStore: Store<{ date: Date; fromDate: Date | null; toDate: Date | null }> = new Store({\n        date: new Date(),\n        fromDate: null,\n        toDate: null,\n    });\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en-US\">\n                    <div>\n                        <DatePicker\n                            className=\"date-picker-example\"\n                            displayFormat={{\n                                day: 'numeric',\n                                month: 'long',\n                                year: 'numeric',\n                            }}\n                            hideOptionalLabel\n                            label=\"From Date\"\n                            maxDate={state.toDate || MAX_TIME}\n                            name=\"datepicker-from\"\n                            onChange={(date: Date) => {\n                                componentStore.set({ fromDate: date });\n                            }}\n                            placeholder=\"Choose a Date\"\n                            value={state.fromDate}\n                        />\n                        <DatePicker\n                            className=\"date-picker-example\"\n                            displayFormat={{\n                                day: 'numeric',\n                                month: 'long',\n                                year: 'numeric',\n                            }}\n                            hideOptionalLabel\n                            label=\"To Date\"\n                            minDate={state.fromDate || MIN_TIME}\n                            maxDate={TODAY}\n                            name=\"datepicker-to\"\n                            onChange={(date: Date) => {\n                                componentStore.set({ toDate: date });\n                            }}\n                            placeholder=\"Choose a Date\"\n                            value={state.toDate}\n                        />\n                    </div>\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport const withRangeAndKeyboardInput = () => {\n    const MAX_TIME = new Date('3000-01-01T00:00:00.000Z');\n    const MIN_TIME = new Date(0);\n    const TODAY = new Date();\n    const componentStore: Store<{ date: Date; fromDate: Date | null; toDate: Date | null }> = new Store({\n        date: new Date(),\n        fromDate: null,\n        toDate: null,\n    });\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en-US\">\n                    <div>\n                        <DatePicker\n                            className=\"date-picker-example\"\n                            displayFormat={{\n                                day: 'numeric',\n                                month: 'long',\n                                year: 'numeric',\n                            }}\n                            hideOptionalLabel\n                            isKeyboardInputAllowed\n                            label=\"From Date\"\n                            maxDate={state.toDate || MAX_TIME}\n                            name=\"datepicker-from\"\n                            onChange={(date: Date) => {\n                                componentStore.set({ fromDate: date });\n                            }}\n                            placeholder=\"Choose a Date\"\n                            value={state.fromDate}\n                        />\n                        <DatePicker\n                            className=\"date-picker-example\"\n                            displayFormat={{\n                                day: 'numeric',\n                                month: 'long',\n                                year: 'numeric',\n                            }}\n                            hideOptionalLabel\n                            isKeyboardInputAllowed\n                            label=\"To Date\"\n                            minDate={state.fromDate || MIN_TIME}\n                            maxDate={TODAY}\n                            name=\"datepicker-to\"\n                            onChange={(date: Date) => {\n                                componentStore.set({ toDate: date });\n                            }}\n                            placeholder=\"Choose a Date\"\n                            value={state.toDate}\n                        />\n                    </div>\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport default {\n    title: 'Components|DatePicker',\n    component: DatePicker,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"DatePicker.stories.js"}