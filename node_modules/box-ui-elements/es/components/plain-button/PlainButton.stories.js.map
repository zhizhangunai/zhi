{"version":3,"sources":["../../../src/components/plain-button/PlainButton.stories.tsx"],"names":["React","boolean","Icon","vars","PlainButton","ButtonType","notes","regular","BUTTON","disabled","fixingMargins","backgroundColor","bdlLightBlue20","display","bdlWatermelonRed10","bdlGreenLight10","title","component","parameters"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAO,KAAKC,IAAZ,MAAsB,wBAAtB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SACnB,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEN,OAAO,CAAC,YAAD,EAAe,KAAf,CAAhC;AAAuD,IAAA,IAAI,EAAEI,UAAU,CAACG;AAAxE,kBADmB;AAAA,CAAhB;AAMP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,oBAAC,WAAD;AAAa,IAAA,UAAU;AAAvB,kBAAN;AAAA,CAAjB;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SACzB,0CACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAER,IAAI,CAACS,cAAxB;AAAwCC,MAAAA,OAAO,EAAE;AAAjD;AAAZ,KACI,oBAAC,WAAD,QACI,oBAAC,IAAD,OADJ,CADJ,CADJ,EAMI,4FANJ,EAQI,kJARJ,EAeI;AAAG,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAER,IAAI,CAACW,kBAAxB;AAA4CD,MAAAA,OAAO,EAAE;AAArD;AAAV,KACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC;AAAvB,KACI,oBAAC,IAAD,OADJ,CADJ,CAfJ,EAoBI,+HAEI,iCACI,sJADJ,CAFJ,CApBJ,EAgCI,+OAhCJ,EAyCI;AAAG,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAER,IAAI,CAACY,eAAxB;AAAyCF,MAAAA,OAAO,EAAE;AAAlD;AAAV,KACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC;AAAvB,KACI,oBAAC,IAAD,OADJ,CADJ,CAzCJ,EA8CI,+FAEI,iCACI,2KADJ,CAFJ,CA9CJ,EA0DI,8PA1DJ,EAmEI;AAAG,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAER,IAAI,CAACY,eAAxB;AAAyCF,MAAAA,OAAO,EAAE;AAAlD;AAAV,KACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC;AAAvB,KACI,oBAAC,IAAD,OADJ,CADJ,CAnEJ,EAwEI,oGAEI,iCACI,gNADJ,CAFJ,CAxEJ,EAoFI,+BACI,mDADJ,kJApFJ,CADyB;AAAA,CAAtB;AA4FP,eAAe;AACXG,EAAAA,KAAK,EAAE,gCADI;AAEXC,EAAAA,SAAS,EAAEb,WAFA;AAGXc,EAAAA,UAAU,EAAE;AACRZ,IAAAA,KAAK,EAALA;AADQ;AAHD,CAAf","sourcesContent":["import * as React from 'react';\nimport { boolean } from '@storybook/addon-knobs';\n\nimport Icon from '../../icons/general/IconCopy';\nimport * as vars from '../../styles/variables';\n\nimport PlainButton from './PlainButton';\nimport { ButtonType } from '../button';\nimport notes from './PlainButton.stories.md';\n\nexport const regular = () => (\n    <PlainButton isDisabled={boolean('isDisabled', false)} type={ButtonType.BUTTON}>\n        Click Here\n    </PlainButton>\n);\n\nexport const disabled = () => <PlainButton isDisabled>Click Here</PlainButton>;\n\nexport const fixingMargins = () => (\n    <>\n        <div style={{ backgroundColor: vars.bdlLightBlue20, display: 'inline-block' }}>\n            <PlainButton>\n                <Icon />\n            </PlainButton>\n        </div>\n        <p>By default the PlainButton component has margins set to 0.</p>\n\n        <style>\n            {`\n                .bdl-SpecialButtonBug {\n                    margin: 8px;\n                }\n            `}\n        </style>\n        <p style={{ backgroundColor: vars.bdlWatermelonRed10, display: 'inline-block' }}>\n            <PlainButton className=\"bdl-SpecialButtonBug\">\n                <Icon />\n            </PlainButton>\n        </p>\n        <p>\n            The layout jumps on hover if margin overrides are not set for the :active and :hover states.\n            <pre>\n                <code>\n                    {`\n            .bdl-SpecialButtonBug {\n                margin: $bdl-grid-unit*2;\n            }\n                `}\n                </code>\n            </pre>\n        </p>\n        <style>\n            {`\n                .bdl-SpecialButtonFix,\n                .bdl-SpecialButtonFix:hover,\n                .bdl-SpecialButtonFix:active {\n                    margin: 8px;\n                }\n            `}\n        </style>\n        <p style={{ backgroundColor: vars.bdlGreenLight10, display: 'inline-block' }}>\n            <PlainButton className=\"bdl-SpecialButtonFix\">\n                <Icon />\n            </PlainButton>\n        </p>\n        <p>\n            Workaround - use bdl-Button-margins mixin to define margins.\n            <pre>\n                <code>\n                    {`\n            .bdl-SpecialButtonFix {\n                @include bdl-Button-margins($bdl-grid-unit*2);\n            }\n                `}\n                </code>\n            </pre>\n        </p>\n        <style>\n            {`\n                .bdl-SpecialButtonFix2,\n                .bdl-SpecialButtonFix2:hover,\n                .bdl-SpecialButtonFix2:active {\n                    margin: 8px 12px 0 16px;\n                }\n            `}\n        </style>\n        <p style={{ backgroundColor: vars.bdlGreenLight10, display: 'inline-block' }}>\n            <PlainButton className=\"bdl-SpecialButtonFix2\">\n                <Icon />\n            </PlainButton>\n        </p>\n        <p>\n            You can set all 4 margins inline using shorthand property syntax.\n            <pre>\n                <code>\n                    {`\n            .bdl-SpecialButtonFix2 {\n                @include bdl-Button-margins($bdl-grid-unit*2 $bdl-grid-unit*3 0 $bdl-grid-unit*4);\n            }\n                `}\n                </code>\n            </pre>\n        </p>\n        <p>\n            <b>Why not fix this?</b> We will eventually, but since this behavior is relied upon in many places it is a\n            breaking change that needs to be rolled out strategically.\n        </p>\n    </>\n);\n\nexport default {\n    title: 'Components|Buttons/PlainButton',\n    component: PlainButton,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"PlainButton.stories.js"}