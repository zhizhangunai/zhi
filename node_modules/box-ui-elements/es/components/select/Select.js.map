{"version":3,"sources":["../../../src/components/select/Select.js"],"names":["React","classNames","FormattedMessage","IconInfo","Tooltip","Label","PlainButton","messages","Select","children","className","error","infoTooltip","infoIconProps","isDisabled","label","name","labelTooltip","onChange","showErrorOutline","showLabel","rest","classes","useState","infoTooltipIsOpen","setInfoTooltipIsOpen","moreInfo"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,eAAP;;AAoBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAcF;AAAA,MAbTC,QAaS,QAbTA,QAaS;AAAA,4BAZTC,SAYS;AAAA,MAZTA,SAYS,+BAZG,EAYH;AAAA,MAXTC,KAWS,QAXTA,KAWS;AAAA,MAVTC,WAUS,QAVTA,WAUS;AAAA,MATTC,aASS,QATTA,aASS;AAAA,MARTC,UAQS,QARTA,UAQS;AAAA,MAPTC,KAOS,QAPTA,KAOS;AAAA,MANTC,IAMS,QANTA,IAMS;AAAA,MALTC,YAKS,QALTA,YAKS;AAAA,MAJTC,QAIS,QAJTA,QAIS;AAAA,mCAHTC,gBAGS;AAAA,MAHTA,gBAGS,sCAHU,KAGV;AAAA,4BAFTC,SAES;AAAA,MAFTA,SAES,+BAFG,IAEH;AAAA,MADNC,IACM;;AACT,MAAMC,OAAO,GAAGrB,UAAU,CAACS,SAAD,EAAY,wBAAZ,EAAsC;AAC5D,kBAAc,CAAC,CAACC,KAAF,IAAWQ,gBADmC;AAE5D,mBAAeL,UAF6C;AAG5D,uBAAmBA;AAHyC,GAAtC,CAA1B;;AADS,wBAMyCd,KAAK,CAACuB,QAAN,CAAe,KAAf,CANzC;AAAA;AAAA,MAMFC,iBANE;AAAA,MAMiBC,oBANjB;;AAOT,SACI;AAAK,IAAA,SAAS,EAAEH;AAAhB,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAACF,SAAnB;AAA8B,IAAA,IAAI,EAAEL,KAApC;AAA2C,IAAA,OAAO,EAAEE;AAApD,KACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,CAAC,CAACN,KAApB;AAA2B,IAAA,QAAQ,EAAC,cAApC;AAAmD,IAAA,IAAI,EAAEA,KAAK,IAAI,EAAlE;AAAsE,IAAA,KAAK,EAAC;AAA5E,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAEI;AAAQ,IAAA,QAAQ,EAAEG,UAAlB;AAA8B,IAAA,IAAI,EAAEE,IAApC;AAA0C,IAAA,QAAQ,EAAEE;AAApD,KAAkEG,IAAlE,GACKZ,QADL,CAFJ,EAKI;AAAM,IAAA,SAAS,EAAC;AAAhB,IALJ,CADJ,EAQKG,WAAW,IACR,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEY,iBAAlB;AAAqC,IAAA,QAAQ,EAAC,cAA9C;AAA6D,IAAA,IAAI,EAAEZ;AAAnE,KACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,wBAFd;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMa,oBAAoB,CAAC,CAACD,iBAAF,CAA1B;AAAA;AAHb,KAKI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAE,EADZ;AAEI,IAAA,KAAK,EAAE,EAFX;AAGI,IAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBjB,QAAQ,CAACmB,QAA/B;AAHX,KAIQb,aAJR,EALJ,CADJ,CATR,CADJ,CADJ,CADJ,CADJ;AAiCH,CAtDD;;AAwDA,eAAeL,MAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport IconInfo from '../../icons/general/IconInfo';\n\nimport Tooltip from '../tooltip';\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport messages from './messages';\nimport './Select.scss';\n\ntype Props = {\n    /** Input `<option />`'s */\n    children?: React.Node,\n    className?: string,\n    error?: React.Node,\n    infoIconProps?: Object,\n    infoTooltip?: React.Node,\n    isDisabled?: boolean,\n    /** Label displayed for the input */\n    label: React.Node,\n    labelTooltip?: string,\n    name: string,\n    /** Handler for the change event on the select element */\n    onChange?: Function,\n    showErrorOutline?: boolean,\n    showLabel?: boolean,\n};\n\nconst Select = ({\n    children,\n    className = '',\n    error,\n    infoTooltip,\n    infoIconProps,\n    isDisabled,\n    label,\n    name,\n    labelTooltip,\n    onChange,\n    showErrorOutline = false,\n    showLabel = true,\n    ...rest\n}: Props) => {\n    const classes = classNames(className, 'select-input-container', {\n        'show-error': !!error || showErrorOutline,\n        'is-disabled': isDisabled,\n        'bdl-is-disabled': isDisabled,\n    });\n    const [infoTooltipIsOpen, setInfoTooltipIsOpen] = React.useState(false);\n    return (\n        <div className={classes}>\n            <Label hideLabel={!showLabel} text={label} tooltip={labelTooltip}>\n                <Tooltip isShown={!!error} position=\"middle-right\" text={error || ''} theme=\"error\">\n                    <span className=\"select-container\">\n                        <span className=\"select-container-inner\">\n                            {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n                            <select disabled={isDisabled} name={name} onChange={onChange} {...rest}>\n                                {children}\n                            </select>\n                            <span className=\"select-overlay\" />\n                        </span>\n                        {infoTooltip && (\n                            <Tooltip isShown={infoTooltipIsOpen} position=\"middle-right\" text={infoTooltip}>\n                                <PlainButton\n                                    type=\"button\"\n                                    className=\"tooltip-icon-container\"\n                                    onClick={() => setInfoTooltipIsOpen(!infoTooltipIsOpen)}\n                                >\n                                    <IconInfo\n                                        height={16}\n                                        width={16}\n                                        title={<FormattedMessage {...messages.moreInfo} />}\n                                        {...infoIconProps}\n                                    />\n                                </PlainButton>\n                            </Tooltip>\n                        )}\n                    </span>\n                </Tooltip>\n            </Label>\n        </div>\n    );\n};\n\nexport default Select;\n"],"file":"Select.js"}