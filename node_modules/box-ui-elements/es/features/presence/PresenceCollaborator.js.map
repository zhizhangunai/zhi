{"version":3,"sources":["../../../src/features/presence/PresenceCollaborator.js"],"names":["React","isEmpty","PropTypes","FormattedMessage","injectIntl","Link","messages","PresenceAvatar","determineInteractionMessage","renderTimestampMessage","interactedAt","interactionType","intl","lastActionMessage","timeAgo","formatRelativeTime","Date","now","formatRelative","PresenceCollaborator","collaborator","props","avatarUrl","id","isActive","name","profileUrl","activeNowText","propTypes","shape","string","oneOfType","number","bool","isRequired","any","PresenceCollaboratorComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AAEA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,2BAAT,QAA4C,uBAA5C;AAEA,OAAO,6BAAP;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,YAAD,EAAeC,eAAf,EAAgCC,IAAhC,EAAyC;AAC3E,MAAMC,iBAAiB,GAAGL,2BAA2B,CAACG,eAAD,EAAkBD,YAAlB,CAArD;AACA,MAAMI,OAAO,GAAGF,IAAI,CAACG,kBAAL,GACVH,IAAI,CAACG,kBAAL,CAAwBL,YAAY,GAAGM,IAAI,CAACC,GAAL,EAAvC,CADU,GAEVL,IAAI,CAACM,cAAL,CAAoBR,YAApB,CAFN;;AAIA,MAAIG,iBAAJ,EAAuB;AACnB,WACI,oBAAC,gBAAD,eACQA,iBADR;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAPA;AADI;AAFZ,OADJ;AAQH;;AACD,SAAO,IAAP;AACH,CAjBM;;AAmBP,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAsC;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAArBR,IAAqB,QAArBA,IAAqB;AAAA,MAAZS,KAAY;;AAAA,MACvDC,SADuD,GACsBF,YADtB,CACvDE,SADuD;AAAA,MAC5CC,EAD4C,GACsBH,YADtB,CAC5CG,EAD4C;AAAA,MACxCb,YADwC,GACsBU,YADtB,CACxCV,YADwC;AAAA,MAC1BC,eAD0B,GACsBS,YADtB,CAC1BT,eAD0B;AAAA,MACTa,QADS,GACsBJ,YADtB,CACTI,QADS;AAAA,MACCC,IADD,GACsBL,YADtB,CACCK,IADD;AAAA,MACOC,UADP,GACsBN,YADtB,CACOM,UADP;AAG/D,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8CL,KAA9C,GACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEC,SAA3B;AAAsC,IAAA,EAAE,EAAEC,EAA1C;AAA8C,IAAA,QAAQ,EAAEC,QAAxD;AAAkE,IAAA,gBAAgB,MAAlF;AAAmF,IAAA,IAAI,EAAEC;AAAzF,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKxB,OAAO,CAACyB,UAAD,CAAP,GACG,kCAAOD,IAAP,CADH,GAGG,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,UAAZ;AAAwB,IAAA,MAAM,EAAC;AAA/B,KACKD,IADL,CAJR,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKD,QAAQ,GACL,oBAAC,gBAAD,EAAsBlB,QAAQ,CAACqB,aAA/B,CADK,GAGLlB,sBAAsB,CAACC,YAAD,EAAeC,eAAf,EAAgCC,IAAhC,CAJ9B,CAVJ,CAFJ,CADJ;AAuBH,CA1BD;;AA4BAO,oBAAoB,CAACS,SAArB,GAAiC;AAC7BR,EAAAA,YAAY,EAAElB,SAAS,CAAC2B,KAAV,CAAgB;AAC1B;AACAP,IAAAA,SAAS,EAAEpB,SAAS,CAAC4B,MAFK;;AAG1B;AACAP,IAAAA,EAAE,EAAErB,SAAS,CAAC6B,SAAV,CAAoB,CAAC7B,SAAS,CAAC4B,MAAX,EAAmB5B,SAAS,CAAC8B,MAA7B,CAApB,CAJsB;AAK1BR,IAAAA,QAAQ,EAAEtB,SAAS,CAAC+B,IALM;;AAM1B;AACAvB,IAAAA,YAAY,EAAER,SAAS,CAAC8B,MAPE;;AAQ1B;AACArB,IAAAA,eAAe,EAAET,SAAS,CAAC4B,MATD;;AAU1B;AACAL,IAAAA,IAAI,EAAEvB,SAAS,CAAC4B,MAAV,CAAiBI,UAXG;;AAY1B;AACAR,IAAAA,UAAU,EAAExB,SAAS,CAAC4B;AAbI,GAAhB,EAcXI,UAf0B;;AAgB7B;AACAtB,EAAAA,IAAI,EAAEV,SAAS,CAACiC;AAjBa,CAAjC;AAoBA,SAAShB,oBAAoB,IAAIiB,6BAAjC;AACA,eAAehC,UAAU,CAACe,oBAAD,CAAzB","sourcesContent":["import * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport Link from '../../components/link/LinkBase';\nimport messages from './messages';\nimport PresenceAvatar from './PresenceAvatar';\nimport { determineInteractionMessage } from './utils/presenceUtils';\n\nimport './PresenceCollaborator.scss';\n\nexport const renderTimestampMessage = (interactedAt, interactionType, intl) => {\n    const lastActionMessage = determineInteractionMessage(interactionType, interactedAt);\n    const timeAgo = intl.formatRelativeTime\n        ? intl.formatRelativeTime(interactedAt - Date.now())\n        : intl.formatRelative(interactedAt);\n\n    if (lastActionMessage) {\n        return (\n            <FormattedMessage\n                {...lastActionMessage}\n                values={{\n                    timeAgo,\n                }}\n            />\n        );\n    }\n    return null;\n};\n\nconst PresenceCollaborator = ({ collaborator, intl, ...props }) => {\n    const { avatarUrl, id, interactedAt, interactionType, isActive, name, profileUrl } = collaborator;\n\n    return (\n        <div className=\"bdl-PresenceCollaborator\" {...props}>\n            <PresenceAvatar avatarUrl={avatarUrl} id={id} isActive={isActive} isDropDownAvatar name={name} />\n            <div className=\"bdl-PresenceCollaborator-info-container\">\n                <div className=\"bdl-PresenceCollaborator-info-name\">\n                    {isEmpty(profileUrl) ? (\n                        <span>{name}</span>\n                    ) : (\n                        <Link href={profileUrl} target=\"_blank\">\n                            {name}\n                        </Link>\n                    )}\n                </div>\n                <div className=\"bdl-PresenceCollaborator-info-time\">\n                    {isActive ? (\n                        <FormattedMessage {...messages.activeNowText} />\n                    ) : (\n                        renderTimestampMessage(interactedAt, interactionType, intl)\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPresenceCollaborator.propTypes = {\n    collaborator: PropTypes.shape({\n        /** Url to avatar image. If passed in, component will render the avatar image instead of the initials */\n        avatarUrl: PropTypes.string,\n        /** Users id */\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        isActive: PropTypes.bool,\n        /** Unix timestamp of when the user last interacted with the document */\n        interactedAt: PropTypes.number,\n        /** The type of interaction by the user */\n        interactionType: PropTypes.string,\n        /** User's full name */\n        name: PropTypes.string.isRequired,\n        /** Custom Profile URL */\n        profileUrl: PropTypes.string,\n    }).isRequired,\n    /* Intl object */\n    intl: PropTypes.any,\n};\n\nexport { PresenceCollaborator as PresenceCollaboratorComponent };\nexport default injectIntl(PresenceCollaborator);\n"],"file":"PresenceCollaborator.js"}