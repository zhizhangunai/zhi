{"version":3,"sources":["../../../../src/features/unified-share-modal/utils/mergeContacts.js"],"names":["mergeContacts","existingContacts","fetchedContacts","contactsMap","Object","keys","reduce","map","email","contact","toLowerCase","text","name","value","id","String","isExternalUser","type"],"mappings":";;;;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,gBAAD,EAAmCC,eAAnC,EAA+E;AACjG,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,eAAZ,EAA6BI,MAA7B,CAAoC,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACpE,QAAMC,OAAO,GAAGP,eAAe,CAACM,KAAD,CAA/B,CADoE,CAEpE;;AACAD,IAAAA,GAAG,CAACC,KAAK,CAACE,WAAN,EAAD,CAAH,qBAAgCD,OAAhC;AAAyCE,MAAAA,IAAI,EAAEF,OAAO,CAACG,IAAvD;AAA6DC,MAAAA,KAAK,EAAEJ,OAAO,CAACD,KAAR,IAAiBC,OAAO,CAACK;AAA7F;AACA,WAAOP,GAAP;AACH,GALmB,EAKjB,EALiB,CAApB;AAOA,SAAON,gBAAgB,CAACM,GAAjB,CAAqB,UAAAE,OAAO,EAAI;AACnC,QAAIA,OAAO,CAACK,EAAZ,EAAgB;AACZ,aAAOL,OAAP;AACH;;AACD,WACI;AACCA,MAAAA,OAAO,CAACI,KAAR,IAAiBV,WAAW,CAACM,OAAO,CAACI,KAAR,CAAcH,WAAd,EAAD,CAA7B,IAA+D;AAC3DF,QAAAA,KAAK,EAAEO,MAAM,CAACN,OAAO,CAACI,KAAT,CAD8C;AAE3DC,QAAAA,EAAE,EAAEC,MAAM,CAACN,OAAO,CAACI,KAAT,CAFiD;AAG3DG,QAAAA,cAAc,EAAE,IAH2C;AAI3DL,QAAAA,IAAI,EAAEI,MAAM,CAACN,OAAO,CAACI,KAAT,CAJ+C;AAK3DI,QAAAA,IAAI,EAAE,MALqD;AAM3DJ,QAAAA,KAAK,EAAEJ,OAAO,CAACI;AAN4C;AAFnE;AAWH,GAfM,CAAP;AAgBH,CAxBD;;AA0BA,eAAeb,aAAf","sourcesContent":["// @flow\n\nimport type { contactType as Contact } from '../flowTypes';\n\nconst mergeContacts = (existingContacts: Array<Contact>, fetchedContacts: Object): Array<Contact> => {\n    const contactsMap = Object.keys(fetchedContacts).reduce((map, email) => {\n        const contact = fetchedContacts[email];\n        // Since objects are case-sensitive, normalize the key to lowercase.\n        map[email.toLowerCase()] = { ...contact, text: contact.name, value: contact.email || contact.id };\n        return map;\n    }, {});\n\n    return existingContacts.map(contact => {\n        if (contact.id) {\n            return contact;\n        }\n        return (\n            // Normalize the getter in contactsMap so that matching existing contacts will be case-insensitive\n            (contact.value && contactsMap[contact.value.toLowerCase()]) || {\n                email: String(contact.value),\n                id: String(contact.value),\n                isExternalUser: true,\n                text: String(contact.value),\n                type: 'user',\n                value: contact.value,\n            }\n        );\n    });\n};\n\nexport default mergeContacts;\n"],"file":"mergeContacts.js"}