{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkPermissionMenu.js"],"names":["React","Component","classNames","FormattedMessage","DropdownMenu","MenuToggle","LabelPill","PlainButton","Menu","SelectMenuItem","CAN_EDIT","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","messages","SharedLinkPermissionMenu","newPermissionLevel","props","changePermissionLevel","permissionLevel","trackingProps","onChangeSharedLinkPermissionLevel","allowedPermissionLevels","isSharedLinkEditTooltipShown","sharedLinkEditTagTargetingApi","sharedLinkEditTooltipTargetingApi","submitting","sharedLinkPermissionsMenuButtonProps","canShowTag","canShow","canShowTooltip","permissionLevels","label","sharedLinkPermissionsEdit","sharedLinkPermissionsViewDownload","sharedLinkPermissionsViewOnly","includes","onComplete","onShow","map","level","onChangePermissionLevel","ftuxSharedLinkPermissionsEditTag"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport LabelPill from '../../components/label-pill';\nimport PlainButton from '../../components/plain-button';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport type { TargetingApi } from '../targeting/types';\n\nimport type { permissionLevelType } from './flowTypes';\nimport { CAN_EDIT, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY } from './constants';\nimport messages from './messages';\n\nimport './SharedLinkPermissionMenu.scss';\n\ntype Props = {\n    allowedPermissionLevels: Array<permissionLevelType>,\n    canChangePermissionLevel: boolean,\n    changePermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    isSharedLinkEditTooltipShown: boolean,\n    permissionLevel?: permissionLevelType,\n    sharedLinkEditTagTargetingApi?: TargetingApi,\n    sharedLinkEditTooltipTargetingApi?: TargetingApi,\n    submitting: boolean,\n    trackingProps: {\n        onChangeSharedLinkPermissionLevel?: Function,\n        sharedLinkPermissionsMenuButtonProps?: Object,\n    },\n};\n\nclass SharedLinkPermissionMenu extends Component<Props> {\n    static defaultProps = {\n        trackingProps: {},\n    };\n\n    onChangePermissionLevel = (newPermissionLevel: permissionLevelType) => {\n        const { changePermissionLevel, permissionLevel, trackingProps } = this.props;\n        const { onChangeSharedLinkPermissionLevel } = trackingProps;\n\n        if (permissionLevel !== newPermissionLevel) {\n            changePermissionLevel(newPermissionLevel);\n\n            if (onChangeSharedLinkPermissionLevel) {\n                onChangeSharedLinkPermissionLevel(newPermissionLevel);\n            }\n        }\n    };\n\n    render() {\n        const {\n            allowedPermissionLevels,\n            isSharedLinkEditTooltipShown,\n            permissionLevel,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            submitting,\n            trackingProps,\n        } = this.props;\n        const { sharedLinkPermissionsMenuButtonProps } = trackingProps;\n        const canShowTag = sharedLinkEditTagTargetingApi ? sharedLinkEditTagTargetingApi.canShow : false;\n        const canShowTooltip = sharedLinkEditTooltipTargetingApi ? sharedLinkEditTooltipTargetingApi.canShow : false;\n\n        if (!permissionLevel) {\n            return null;\n        }\n\n        const permissionLevels = {\n            [CAN_EDIT]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsEdit} />,\n            },\n            [CAN_VIEW_DOWNLOAD]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsViewDownload} />,\n            },\n            [CAN_VIEW_ONLY]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsViewOnly} />,\n            },\n        };\n\n        return (\n            <DropdownMenu\n                constrainToWindow\n                onMenuClose={() => {\n                    if (allowedPermissionLevels.includes(CAN_EDIT) && canShowTag && sharedLinkEditTagTargetingApi) {\n                        sharedLinkEditTagTargetingApi.onComplete();\n                    }\n                }}\n                onMenuOpen={() => {\n                    if (allowedPermissionLevels.includes(CAN_EDIT) && canShowTag && sharedLinkEditTagTargetingApi) {\n                        sharedLinkEditTagTargetingApi.onShow();\n                    }\n\n                    // complete tooltip FTUX on opening of dropdown menu\n                    if (isSharedLinkEditTooltipShown && canShowTooltip && sharedLinkEditTooltipTargetingApi) {\n                        sharedLinkEditTooltipTargetingApi.onComplete();\n                    }\n                }}\n            >\n                <PlainButton\n                    className={classNames('lnk', {\n                        'is-disabled': submitting,\n                        'bdl-is-disabled': submitting,\n                    })}\n                    disabled={submitting}\n                    {...sharedLinkPermissionsMenuButtonProps}\n                >\n                    <MenuToggle>{permissionLevels[permissionLevel].label}</MenuToggle>\n                </PlainButton>\n                <Menu className=\"ums-share-permissions-menu\">\n                    {allowedPermissionLevels.map(level => (\n                        <SelectMenuItem\n                            key={level}\n                            isSelected={level === permissionLevel}\n                            onClick={() => this.onChangePermissionLevel(level)}\n                        >\n                            <div className=\"ums-share-permissions-menu-item\">\n                                <span>{permissionLevels[level].label}</span>\n                                {level === CAN_EDIT && canShowTag && (\n                                    <LabelPill.Pill className=\"ftux-editable-shared-link\" type=\"ftux\">\n                                        <LabelPill.Text>\n                                            <FormattedMessage {...messages.ftuxSharedLinkPermissionsEditTag} />\n                                        </LabelPill.Text>\n                                    </LabelPill.Pill>\n                                )}\n                            </div>\n                        </SelectMenuItem>\n                    ))}\n                </Menu>\n            </DropdownMenu>\n        );\n    }\n}\n\nexport default SharedLinkPermissionMenu;\n"],"file":"SharedLinkPermissionMenu.js"}