{"version":3,"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerNewFolderButton.js"],"names":["PropTypes","React","FormattedMessage","injectIntl","Button","ContentExplorerModePropType","ContentExplorerModes","messages","ContentExplorerNewFolderButton","contentExplorerMode","intl","onClick","isDisabled","isCreateNewFolderAllowed","doesModeAllowCreateNewFolder","COPY","MOVE_COPY","MULTI_SELECT","SELECT_FOLDER","formatMessage","newFolderForbidden","newFolder","propTypes","isRequired","any","func","bool","ContentExplorerNewFolderButtonBase"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,SAASC,2BAAT,QAA4C,eAA5C;AACA,OAAOC,oBAAP,MAAiC,UAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,OAMjC;AAAA,MALFC,mBAKE,QALFA,mBAKE;AAAA,MAJFC,IAIE,QAJFA,IAIE;AAAA,MAHFC,OAGE,QAHFA,OAGE;AAAA,6BAFFC,UAEE;AAAA,MAFFA,UAEE,gCAFW,KAEX;AAAA,mCADFC,wBACE;AAAA,MADFA,wBACE,sCADyB,IACzB;AACF,MAAMC,4BAA4B,GAC9BL,mBAAmB,KAAKH,oBAAoB,CAACS,IAA7C,IACAN,mBAAmB,KAAKH,oBAAoB,CAACU,SAD7C,IAEAP,mBAAmB,KAAKH,oBAAoB,CAACW,YAF7C,IAGAR,mBAAmB,KAAKH,oBAAoB,CAACY,aAJjD;AAMA,SAAOJ,4BAA4B,GAC/B,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,oCADd;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,OAAO,EAAEH,OAHb;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,IAAA,KAAK,EAAE,CAACC,wBAAD,GAA4BH,IAAI,CAACS,aAAL,CAAmBZ,QAAQ,CAACa,kBAA5B,CAA5B,GAA8E;AALzF,KAOI,oBAAC,gBAAD,EAAsBb,QAAQ,CAACc,SAA/B,CAPJ,CAD+B,GAU/B,IAVJ;AAWH,CAxBD;;AA0BAb,8BAA8B,CAACc,SAA/B,GAA2C;AACvCb,EAAAA,mBAAmB,EAAEJ,2BAA2B,CAACkB,UADV;AAEvCb,EAAAA,IAAI,EAAEV,SAAS,CAACwB,GAFuB;AAGvCb,EAAAA,OAAO,EAAEX,SAAS,CAACyB,IAHoB;AAIvCb,EAAAA,UAAU,EAAEZ,SAAS,CAAC0B,IAJiB;AAKvCb,EAAAA,wBAAwB,EAAEb,SAAS,CAAC0B;AALG,CAA3C;AAQA,SAASlB,8BAA8B,IAAImB,kCAA3C;AACA,eAAexB,UAAU,CAACK,8BAAD,CAAzB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport Button from '../../../components/button';\n\nimport { ContentExplorerModePropType } from '../prop-types';\nimport ContentExplorerModes from '../modes';\nimport messages from '../messages';\n\nconst ContentExplorerNewFolderButton = ({\n    contentExplorerMode,\n    intl,\n    onClick,\n    isDisabled = false,\n    isCreateNewFolderAllowed = true,\n}) => {\n    const doesModeAllowCreateNewFolder =\n        contentExplorerMode === ContentExplorerModes.COPY ||\n        contentExplorerMode === ContentExplorerModes.MOVE_COPY ||\n        contentExplorerMode === ContentExplorerModes.MULTI_SELECT ||\n        contentExplorerMode === ContentExplorerModes.SELECT_FOLDER;\n\n    return doesModeAllowCreateNewFolder ? (\n        <Button\n            className=\"content-explorer-new-folder-button\"\n            type=\"button\"\n            onClick={onClick}\n            isDisabled={isDisabled}\n            title={!isCreateNewFolderAllowed ? intl.formatMessage(messages.newFolderForbidden) : ''}\n        >\n            <FormattedMessage {...messages.newFolder} />\n        </Button>\n    ) : null;\n};\n\nContentExplorerNewFolderButton.propTypes = {\n    contentExplorerMode: ContentExplorerModePropType.isRequired,\n    intl: PropTypes.any,\n    onClick: PropTypes.func,\n    isDisabled: PropTypes.bool,\n    isCreateNewFolderAllowed: PropTypes.bool,\n};\n\nexport { ContentExplorerNewFolderButton as ContentExplorerNewFolderButtonBase };\nexport default injectIntl(ContentExplorerNewFolderButton);\n"],"file":"ContentExplorerNewFolderButton.js"}