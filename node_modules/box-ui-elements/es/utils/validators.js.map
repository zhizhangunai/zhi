{"version":3,"sources":["../../src/utils/validators.js"],"names":["Address","tldsHapi","hostnameValidator","value","regex","test","ipv4AddressValidator","domainNameValidator","domain","isValid","tldSupplements","emailValidator","email","tlds","allow","Set","map","tld","toLowerCase"],"mappings":";;;;;;;;AACA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAmD;AAC/C;AACA,MAAMC,KAAK,GAAG,2GAAd;AACA,SAAOA,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAP;AACH;;AAED,SAASG,oBAAT,CAA8BH,KAA9B,EAAsD;AAClD;AACA,MAAMC,KAAK,GAAG,6FAAd;AACA,SAAOA,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAP;AACH;;AAED,SAASI,mBAAT,CAA6BJ,KAA7B,EAAqD;AACjD,SAAOH,OAAO,CAACQ,MAAR,CAAeC,OAAf,CAAuBN,KAAvB,CAAP;AACH,C,CAED;AACA;AAEA;AACA;AACA;;;AACA,IAAMO,cAAc,GAAG,CACnB,QADmB,EAEnB,KAFmB,EAGnB,KAHmB,EAInB,OAJmB,EAKnB,KALmB,EAMnB,cANmB,EAOnB,eAPmB,EAQnB,gBARmB,EASnB,kBATmB,EAUnB,YAVmB,EAWnB,IAXmB,CAAvB;;AAcA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACR,KAAD;AAAA,SACnBH,OAAO,CAACY,KAAR,CAAcH,OAAd,CAAsBN,KAAtB,EAA6B;AACzBU,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAIC,GAAJ,8BAAYd,QAAZ,sBAAyBS,cAAc,CAACM,GAAf,CAAmB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,OAAtB,CAAzB;AAAT;AADmB,GAA7B,CADmB;AAAA,CAAvB;;AAKA,SAASX,mBAAT,EAA8BI,cAA9B,EAA8CT,iBAA9C,EAAiEI,oBAAjE","sourcesContent":["// @flow\nimport Address from '@hapi/address';\nimport tldsHapi from '@hapi/address/lib/tlds';\n\nfunction hostnameValidator(value: string): boolean {\n    // @see https://github.com/hapijs/joi/blame/3516cf0b995c9fe415634c4612c0ac2f8792f0b4/lib/types/string/index.js#L530\n    const regex = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/;\n    return regex.test(value);\n}\n\nfunction ipv4AddressValidator(value: string): boolean {\n    // @see https://www.oreilly.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n    const regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(value);\n}\n\nfunction domainNameValidator(value: string): boolean {\n    return Address.domain.isValid(value);\n}\n\n// @sideway/address ^4 has exhaustive TLDs, but upgrading requires a TextEncoder polyfill (such as fast-text-encoder) for IE11 support.\n// We can freely upgrade and remove manual TLD supplementation after IE11 EOL.\n\n// Diff of '@hapi/address/lib/tlds' and:\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// Version 2022020100, Last Updated Tue Feb  1 07:07:01 2022 UTC,\nconst tldSupplements = [\n    'AMAZON',\n    'CPA',\n    'LLP',\n    'MUSIC',\n    'SPA',\n    'XN--4DBRK0CE',\n    'XN--CCKWCXETD',\n    'XN--JLQ480N2RG',\n    'XN--MGBCPQ6GPA1A',\n    'XN--Q7CE6A',\n    'ZW',\n];\n\nconst emailValidator = (value: string): boolean =>\n    Address.email.isValid(value, {\n        tlds: { allow: new Set([...tldsHapi, ...tldSupplements.map(tld => tld.toLowerCase())]) },\n    });\n\nexport { domainNameValidator, emailValidator, hostnameValidator, ipv4AddressValidator };\n"],"file":"validators.js"}