import { UnifiedNumberFormatLocaleData } from '@formatjs/intl-utils';

/**
 * Check if a formatting number with unit is supported
 * @public
 * @param unit unit to check
 */
export declare function isUnitSupported(unit: Unit): boolean;

export declare interface ResolvedUnifiedNumberFormatOptions extends Intl.ResolvedNumberFormatOptions {
    compactDisplay?: 'short' | 'long';
    currencyDisplay?: 'symbol' | 'code' | 'name' | 'narrowSymbol';
    currencySign?: 'standard' | 'accounting';
    notation?: 'standard' | 'scientific' | 'engineering' | 'compact';
    signDisplay?: 'auto' | 'always' | 'never' | 'exceptZero';
    unit?: Unit;
    unitDisplay?: 'long' | 'short' | 'narrow';
}

export declare class UnifiedNumberFormat implements Intl.NumberFormat {
    private nf;
    private pl;
    private unitPattern?;
    private currencyNarrowSymbol?;
    constructor(locales?: string | string[], options?: UnifiedNumberFormatOptions);
    format(num: number): string;
    formatToParts(num: number): Intl.NumberFormatPart[];
    resolvedOptions(): ResolvedUnifiedNumberFormatOptions;
    static supportedLocalesOf(locales: string | string[], options?: Pick<UnifiedNumberFormatOptions, 'localeMatcher'>): string[];
    static __addLocaleData(...data: UnifiedNumberFormatLocaleData[]): void;
    static localeData: UnifiedNumberFormatLocaleData['data'];
    private static availableLocales;
    private static __defaultLocale;
    private static getDefaultLocale;
    private static relevantExtensionKeys;
    static polyfilled: boolean;
    private static readonly __INTERNAL_SLOT_MAP__;
}

export declare interface UnifiedNumberFormatOptions extends Intl.NumberFormatOptions {
    compactDisplay?: 'short' | 'long';
    currencyDisplay?: 'symbol' | 'code' | 'name' | 'narrowSymbol';
    currencySign?: 'standard' | 'accounting';
    notation?: 'standard' | 'scientific' | 'engineering' | 'compact';
    signDisplay?: 'auto' | 'always' | 'never' | 'exceptZero';
    unit?: Unit;
    unitDisplay?: 'long' | 'short' | 'narrow';
}

export declare type Unit = 'degree' | 'acre' | 'hectare' | 'percent' | 'bit' | 'byte' | 'gigabit' | 'gigabyte' | 'kilobit' | 'kilobyte' | 'megabit' | 'megabyte' | 'petabyte' | 'terabit' | 'terabyte' | 'day' | 'hour' | 'millisecond' | 'minute' | 'month' | 'second' | 'week' | 'year' | 'centimeter' | 'foot' | 'inch' | 'kilometer' | 'meter' | 'mile-scandinavian' | 'mile' | 'millimeter' | 'yard' | 'gram' | 'kilogram' | 'ounce' | 'pound' | 'stone' | 'celsius' | 'fahrenheit' | 'fluid-ounce' | 'gallon' | 'liter' | 'milliliter';

export { }
