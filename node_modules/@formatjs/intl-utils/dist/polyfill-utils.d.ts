/**
 * https://tc39.es/ecma262/#sec-toobject
 * @param arg
 */
export declare function toObject<T>(arg: T): T extends null ? never : T extends undefined ? never : T;
/**
 * https://tc39.es/ecma402/#sec-getoption
 * @param opts
 * @param prop
 * @param type
 * @param values
 * @param fallback
 */
export declare function getOption<T extends object, K extends keyof T>(opts: T, prop: K, type: 'string' | 'boolean', values?: T[K][], fallback?: T[K]): T[K] | undefined;
export declare function getAliasesByLang(lang: string): Record<string, string>;
export declare function getParentLocalesByLang(lang: string): Record<string, string>;
export declare function setInternalSlot<Instance extends object, Internal, Field extends keyof Internal>(map: WeakMap<Instance, Internal>, pl: Instance, field: Field, value: Internal[Field]): void;
export declare function getInternalSlot<Instance extends object, Internal, Field extends keyof Internal>(map: WeakMap<Instance, Internal>, pl: Instance, field: Field): Internal[Field];
export interface LiteralPart {
    type: 'literal';
    value: string;
}
export declare function isLiteralPart(patternPart: LiteralPart | {
    type: string;
    value?: string;
}): patternPart is LiteralPart;
export declare function partitionPattern(pattern: string): ({
    type: string;
    value: string;
} | {
    type: string;
    value: undefined;
})[];
